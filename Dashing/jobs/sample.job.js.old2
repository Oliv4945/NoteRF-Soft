// Configuration
var dbAddress = 'localhost'
var dbPort = '8086'
var dbName = 'db_test'
var dbUser = 'root'
var dbPwd = 'testinflux'

var itemsToQuery = [ ['Conservatory','Veranda'] ]

// Request initialisation
var request = require('request');
  var itemsA = [];
  var itemsB

// Set a function with timeout
setInterval(function() {

  var i = 0


  for( i = 0; i < itemsToQuery.length;i++) {

    // Make the request
    request('http://'+dbAddress+':'+dbPort+'/db/'+dbName+'/series?u=' + dbUser+'&p='+dbPwd+'&q=SELECT%20*%20FROM%20%22/data/'+encodeURIComponent(itemsToQuery[i][0])+'/Humidity%22%20LIMIT%201', function (error, response, body, i) {
      if (!error && response.statusCode == 200) {
//        console.log(body)
        console.log( "i : " + i )
        // itemsA.push( {label: 'test', value:  JSON.parse(body)[0]['points'][0][2] })
	send_event('welcome', { text: JSON.parse(body)[0]['points'][0][2] });
      }
    }) (i)

  
    /*var itemarray = [
      {label: itemsToQuery[0][1], value: itemsToQuery[0][2] },
      {label: 'Server #3', value: Math.random()*20 }
    ];*/

//      itemsA.push( {label: 'Server #2', value: Math.random()*20 } )
//      itemsA.push( {label: 'Server #2', value: Math.random()*20 } )
//      itemsA.push( {label: 'Server #2', value: Math.random()*20 } )


  }
 
var numberOfSystemsDown = Math.random()*5;
var datastruct = {
  items: itemsA,
  hotnessvalue:numberOfSystemsDown // Here you set the value of "hotness"
};
send_event('serverstatus', datastruct);
  
  
}, 2 * 1000);
